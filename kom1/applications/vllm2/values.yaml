vllm2:
  servingEngineSpec:
    strategy:
      # We only have one GPU node, so we need to kill exiting deployment first.
      type: Recreate

    runtimeClassName: ""
    modelSpec:
      - name: "mistral"
        repository: "vllm/vllm-openai"
        tag: "v0.10.1.1"
        #repository: "lmcache/vllm-openai"
        #tag: "2025-05-27-v1"

        modelURL: "mistralai/Mistral-Small-3.2-24B-Instruct-2506"

        replicaCount: 2

        requestCPU: 4
        requestMemory: "56Gi"
        requestGPU: 1

        pvcStorage: "200Gi"
        pvcAccessMode:
          - ReadWriteOnce

        vllmConfig:
          enableChunkedPrefill: true
          enablePrefixCaching: true
          maxModelLen: 16384
          extraArgs: ["--tokenizer-mode", "mistral", "--config_format", "mistral", "--load_format", "mistral"]

        lmcacheConfig:
          enabled: false
          cpuOffloadingBufferSize: "20"

        hf_token:
          secretName: "hf-secret2"
          secretKey: "TOKEN"

        nodeSelectorTerms:
          - matchExpressions:
              - key: nvidia.com/vgpu.present
                operator: "In"
                values:
                  - "true"

    vllmApiKey:
      secretName: "vllm-secret2"
      secretKey: "KEY"

    tolerations:
    - key: "node-role.kubernetes.io/gpu"
      operator: "Exists"

  routerSpec:
    repository: "lmcache/lmstack-router"
    tag: "latest"
    imagePullPolicy: "Always"
